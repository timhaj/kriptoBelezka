@page
@model EnableAuthenticatorModel
@{
    ViewData["Title"] = "Configure authenticator app";
    ViewData["ActivePage"] = ManageNavPages.TwoFactorAuthentication;
}

<input type="hidden" id="saved-theme" value="light-mode" />
<partial name="_StatusMessage" for="StatusMessage" />
<h3>@ViewData["Title"]</h3>
<div>
    <p>To use an authenticator app go through the following steps:</p>
    <ol class="list">
        <li>
            <p>
                Download a two-factor authenticator app like Microsoft Authenticator for
                <a href="https://go.microsoft.com/fwlink/?Linkid=825072"
                    class="enable_authenticator_provider">Android</a> and
                <a href="https://go.microsoft.com/fwlink/?Linkid=825073" class="enable_authenticator_provider">iOS</a>
                or
                Google Authenticator for
                <a href="https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&amp;hl=en"
                    class="enable_authenticator_provider">Android</a>
                and
                <a href="https://itunes.apple.com/us/app/google-authenticator/id388497605?mt=8"
                    class="enable_authenticator_provider">iOS</a>.
            </p>
        </li>
        <li>
            <p>Scan the QR Code or enter this key <kbd>@Model.SharedKey</kbd> into your two factor authenticator app.
                Spaces and casing do not matter.</p>
            <div class="alert alert-info">Learn how to <a href="https://go.microsoft.com/fwlink/?Linkid=852423"
                    class="enable_authenticator_provider">enable
                    QR code generation</a>.</div>
            <div id="qrCode"></div>
            <div id="qrCodeData" data-url="@Model.AuthenticatorUri"></div>
        </li>
        <li>
            <p>
                Once you have scanned the QR code or input the key above, your two factor authentication app will
                provide you
                with a unique code. Enter the code in the confirmation box below.
            </p>
            <div class="row">
                <div class="col-md-6">
                    <form id="send-code" method="post">
                        <div class="form-floating mb-3">
                            <input asp-for="Input.Code" class="form-control" autocomplete="off"
                                placeholder="Please enter the code." />
                            <label asp-for="Input.Code" class="control-label form-label">Verification Code</label>
                            <span asp-validation-for="Input.Code" class="text-danger"></span>
                        </div>
                        <button type="submit" class="w-100 btn btn-lg" id="verify_enable_authentication">Verify</button>
                        <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
                    </form>
                </div>
            </div>
        </li>
    </ol>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const savedThemeInput = document.getElementById("saved-theme");

        // Apply the initial theme based on the value of the hidden input
        const applyTheme = (theme) => {
            const navbarTheme = document.getElementById("navbar");
            const navbar_titleTheme = document.getElementById("navbar_title");
            const partial_footerTheme = document.getElementById("partial_footer");
            const nav_linkTheme = document.getElementsByClassName("nav-link2");
            const navbar_gearTheme = document.getElementById("navbar_gear");
            if (theme == "dark") {
                navbar_gearTheme.setAttribute("fill", "#f5acc6");
            }
            else {
                navbar_gearTheme.setAttribute("fill", "#392d31");
            }
            document.body.className = theme === "dark" ? "dark-mode" : "light-mode";
            navbarTheme.className = theme === "dark" ? "dark-mode" : "light-mode";
            partial_footerTheme.classList.toggle(theme === "dark" ? "dark-mode" : "light-mode");
            navbar_titleTheme.classList.toggle(theme === "dark" ? "dark-mode" : "light-mode");
            for (let i = 0; i < nav_linkTheme.length; i++) {
                nav_linkTheme[i].classList.toggle(theme === "dark" ? "dark-mode" : "light-mode");
            }
        };

        // Initialize theme on page load
        applyTheme(savedThemeInput.value);

        // Observe changes to the input value
        const observer = new MutationObserver(() => {
            applyTheme(savedThemeInput.value);
        });

        // Start observing the hidden input for changes to the `value` attribute
        observer.observe(savedThemeInput, { attributes: true, attributeFilter: ["value"] });
    });
</script>